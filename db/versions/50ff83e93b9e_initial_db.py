"""initial db

Revision ID: 50ff83e93b9e
Revises: 
Create Date: 2024-09-03 12:57:20.309316

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import uuid

# revision identifiers, used by Alembic.
revision: str = '50ff83e93b9e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_logged_in', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('datasets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reset_password',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('verification_code', sa.String(), nullable=False),
    sa.Column('expiry_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('number_of_queries', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_edited_by', sa.UUID(), nullable=True),
    sa.Column('last_edited_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['last_edited_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qna',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('query_type', sa.String(), nullable=False),
    sa.Column('query_category', sa.String(), nullable=False),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_updated_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chunk_result',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('qna_id', sa.UUID(), nullable=True),
    sa.Column('chunk_content', sa.String(), nullable=False),
    sa.Column('chunk_metadata', sa.JSON(), nullable=False),
    sa.Column('retriever_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['qna_id'], ['qna.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('version',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('qna_id', sa.UUID(), nullable=True),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('additional_info', sa.ARRAY(sa.JSON()), nullable=True),
    sa.Column('generation_response', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['qna_id'], ['qna.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('annotated_text',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('version_id', sa.UUID(), nullable=True),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('start_index', sa.Integer(), nullable=False),
    sa.Column('end_index', sa.Integer(), nullable=False),
    sa.Column('source_text', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    roles_table = sa.Table(
        'roles',
        sa.MetaData(),
        sa.Column('id', sa.UUID(as_uuid=True), primary_key=True),
        sa.Column('name', sa.String, nullable=False)
    )
    op.bulk_insert(roles_table,
    [
        {"id": str(uuid.uuid4()), "name": "Admin"},
        {"id": str(uuid.uuid4()), "name": "Annotator"},
        {"id": str(uuid.uuid4()), "name": "Reviewer"},
    ]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('annotated_text')
    op.drop_table('version')
    op.drop_table('chunk_result')
    op.drop_table('qna')
    op.drop_table('documents')
    op.drop_table('user_roles')
    op.drop_table('reset_password')
    op.drop_table('datasets')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
